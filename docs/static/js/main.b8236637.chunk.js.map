{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","categories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","type","value","onChange","target","getGifs","category","a","url","fetch","respuesta","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","ima","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WAAgB,EACnBC,mBAAS,IADU,mBAChDC,EADgD,KACpCC,EADoC,KAavD,OACI,sBAAMC,SATS,SAACC,GAClBA,EAAEC,iBAEc,KAAbJ,IACDH,EAAc,CAACG,GAAF,mBAAgBF,KAC7BG,EAAc,MAId,SACI,uBACAI,KAAK,OACLC,MAAON,EACPO,SAhBW,SAACJ,GACxBF,EAAcE,EAAEK,OAAOF,a,uBCLVG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEmCF,EAFnC,+DAGEG,MAAMD,GAHR,cAGdE,EAHc,gBAIDA,EAAUC,OAJT,uBAIbC,EAJa,EAIbA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CAAEC,GAAID,EAAIC,GAChBC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QARjB,kBAUbK,GAVa,4CAAD,sDCEPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IACzB,OACI,sBAAKM,UAAU,QAAf,UACI,qBAAKC,IAAKP,EAAIP,IAAKe,IAAI,WACvB,4BAAIR,EAAIE,YCHPO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACbX,mBAAS,CAC/BuB,OAAO,GACPO,SAAQ,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAkBvC,OAbDC,qBAAU,WACRvB,EAAQC,GACPuB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLT,OAAOY,EACPL,SAAQ,MAEd,UAGN,CAACnB,IAEKoB,EDhBiBM,CAAa1B,GAA7BY,EAD4B,EAC5BA,OAAOO,EADqB,EACrBA,QAClB,OACI,qCACA,6BAAKnB,IACJmB,GAAU,aACb,qBAAKJ,UAAU,mBAAf,SAEGH,EAAOJ,KAAI,SAAAmB,GACR,OAAO,cAAC,EAAD,CAA0BlB,IAAKkB,GAAbA,EAAIjB,aERxBkB,EAAe,WAAO,IAAD,EAEMvC,mBAAS,CAAC,cAFhB,mBAEvBD,EAFuB,KAEXD,EAFW,KAK9B,OACI,qCACI,qBAAI4B,UAAU,SAAd,6BAAuC,oDAAvC,OACA,cAAC,EAAD,CAAa5B,cAAeA,EAAeC,WAAYA,IACvD,uBAEA,6BAGQA,EAAWoB,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCb3B6B,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b8236637.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setcategories,categories}) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n    const handleChange=(e)=>{\r\nsetinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n      e.preventDefault();  \r\n     \r\n      if(inputValue!==\"\"){\r\n        setcategories([inputValue,...categories]);\r\n        setinputValue('')\r\n      }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type='text' \r\n            value={inputValue}\r\n            onChange={handleChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n   setcategories:PropTypes.func.isRequired\r\n}","export const getGifs=async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${category}&limit=20&api_key=dChCeBsVt77qmQCwdSm55Gi9crmDDJOT`;\r\n const respuesta=await fetch(url);\r\n const {data}=await respuesta.json();\r\n const gift=data.map(img=>{\r\n    return { id: img.id,\r\n     title: img.title,\r\n     url: img.images.downsized_medium.url}\r\n })\r\n return gift;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    return (\r\n        <div className='items'>\r\n            <img src={img.url} alt='imagen'/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem'; \r\nexport const GifGrid = ({category}) => {\r\n    const {images,loading}=useFetchGifs(category);\r\nreturn(\r\n    <>\r\n    <h3>{category}</h3>\r\n    {loading &&'loading...'}\r\n  <div className='contenedor-items'>  \r\n     {\r\n     images.map(ima=>{  \r\n        return <GifGridItem key={ima.id} img={ima}/>\r\n     })\r\n     }\r\n    </div>\r\n   </>\r\n)\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n       images:[],\r\n       loading:true\r\n   });\r\n  useEffect(()=>{\r\n    getGifs(category)\r\n    .then(imgs=>{\r\n        setTimeout(()=>{\r\n            setState({\r\n                images:imgs,\r\n                loading:false   \r\n               }) \r\n        },1000)\r\n\r\n    })\r\n  },[category])\r\n\r\n   return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className='titulo'>Buscador De Gifs<span>Nicolas Aparicio</span> </h2>\r\n            <AddCategory setcategories={setcategories} categories={categories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n\r\n                    categories.map(category => \r\n                      <GifGrid\r\n                      key={category} \r\n                      category={category}/>\r\n                      \r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </ol>\r\n        </>)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css'\n\n\n\nReactDOM.render( \n<GifExpertApp />,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}